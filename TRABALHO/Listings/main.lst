C51 COMPILER V9.60.7.0   MAIN                                                              12/27/2023 18:32:29 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REG51F380.H>
   2          #include "init_device.h"
   3          #include <stdio.h>
   4          #include "types.h"
   5          #include "lcd1602.h"
   6          #include "config_platform.h"
   7          #include "serialIO.h"
   8          #include "delay.h"
   9          
  10          #include <stdlib.h>
  11          
  12          unsigned char temp[25] =  {22, 21, 25, 22, 25, 23, 28, 20, 25, 27, 22, 22, 28, 22, 29, 28, 27, 27, 26, 23,
             - 28, 22, 21, 27, 29};
  13          unsigned char hum[25] =   {63, 70, 60, 60, 69, 69, 69, 60, 67, 60, 63, 66, 67, 62, 69, 66, 64, 63, 70, 60, 
             -69, 65, 67, 62, 70};
  14            
  15          sbit PB1 = P0^6;
  16          
  17          // LCD ADDRESS 0x27
  18          #define LCD_ADDR_W 0x4E
  19          #define LCD_ADDR_R 0x4F
  20          
  21          
  22          /*********************************************************
  23           * main loop                                             *
  24           *********************************************************/
  25          void main(void){
  26   1        
  27   1        char rc;
  28   1        char c = 0;
  29   1        
  30   1      
  31   1        init_device();
  32   1        timer2_init_auto(-40000);
  33   1        uart0_initialize();
  34   1        
  35   1        
  36   1        //Set by hardware when the Timer 2/3 high byte overflows from 0xFF to 0x00. In 16 bit 
  37   1        //mode, this will occur when Timer 2/3 overflows from 0xFFFF to 0x0000.   
  38   1        TF2H = 0; 
  39   1        TMR3CN &= ~(1 << B_TF3H);
  40   1        
  41   1        // Enable Flag Timer 2/3 Overflow
  42   1        ET2 = 1;
  43   1        EIE1 |= (1 << B_ET3);
  44   1        
  45   1        // Timer 2/3 Run Control. Timer 2/3 is enabled by setting this bit to 1. 
  46   1        TMR3CN |= (1 << B_TR3);
  47   1        TR2 = 1;
  48   1        
  49   1        EA=1; //enable interrupts
  50   1        
  51   1      
  52   1        
C51 COMPILER V9.60.7.0   MAIN                                                              12/27/2023 18:32:29 PAGE 2   

  53   1        rc = lcd1602Init(LCD_ADDR_W);
  54   1        if (rc)
  55   1        {
  56   2          while(1);
  57   2        }
  58   1        
  59   1          while(1){
  60   2          lcd1602Clear(LCD_ADDR_W);     // clear the memory
  61   2      
  62   2          lcd1602Control(LCD_ADDR_W, 1,0,1); // backlight on, underline on, blink block on 
  63   2          
  64   2          lcd1602SetCursor(LCD_ADDR_W, 0, 0);
  65   2              
  66   2          P2 = 0x86;
  67   2          delay_s(1);
  68   2          P2 = 0xC6;
  69   2            
  70   2          
  71   2          
  72   2          lcd1602WriteString(LCD_ADDR_W, "OLAAA");
  73   2            
  74   2          lcd1602Control(LCD_ADDR_W, 1,0,1); // backlight on, underline off, blink block on 
  75   2          
  76   2          lcd1602SetCursor(LCD_ADDR_W, 5, 1);
  77   2          
  78   2          delay_s(1);
  79   2          
  80   2          lcd1602WriteString(LCD_ADDR_W, "STAY COOL!!!");
  81   2          
  82   2          delay_s(1);
  83   2          
  84   2          lcd1602Shutdown(LCD_ADDR_W);
  85   2          
  86   2          lcd1602Init(LCD_ADDR_W);
  87   2      
  88   2          lcd1602Control(LCD_ADDR_W, 1,0,1); // backlight on, underline on, blink block on 
  89   2          
  90   2          lcd1602SetCursor(LCD_ADDR_W, 0, 0);
  91   2          
  92   2          delay_s(1);
  93   2          
  94   2          lcd1602WriteString(LCD_ADDR_W, "HELLO AGAIN!!");
  95   2          
  96   2          lcd1602Control(LCD_ADDR_W, 1,1,1); // backlight on, underline on, blink block on 
  97   2          
  98   2          lcd1602SetCursor(LCD_ADDR_W, 0, 1);
  99   2      
 100   2          delay_s(1);
 101   2          
 102   2        }
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    213    ----
   CONSTANT SIZE    =     33    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     52    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   MAIN                                                              12/27/2023 18:32:29 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
