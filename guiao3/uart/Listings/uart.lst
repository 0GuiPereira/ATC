C51 COMPILER V9.60.7.0   UART                                                              11/15/2023 17:40:05 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE uart.c OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\uart
                    -.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include <REG51F380.H>
   2          #include <stdio.h>
   3          #include "types.h"
   4          
   5          /*********************************************************
   6           * function prototypes                                   *
   7           *********************************************************/
   8          // init uart 0
   9          void uart0_init(void);
  10          // our simple printf version
  11          void print_u0(char* p_message);
  12          // our simple scanf version 
  13          char uart0_getc(char* c);
  14          // our putchar version 
  15          void uart0_putc(char c);
  16          
  17          /*********************************************************/
  18              
  19          code char message_u0[] = "Hello 8051!\r\n";
  20          
  21          /*********************************************************/ 
  22          void Init_Device(void){
  23   1        
  24   1        /* Disable WDT */
  25   1        PCA0MD    = 0x00;
  26   1        /* select clock source */
  27   1        FLSCL     = 0x90;
  28   1        CLKSEL    = 0x03;
  29   1        /* enable cross-bar for I/Os */
  30   1        XBR1      = 0x40;
  31   1        /* enable uart0 with TX pin on P0.4 and RX pin on P0.5 */
  32   1        XBR0      = 0x01;
  33   1      }
  34          
  35          /*********************************************************
  36           * my main loop                                          *
  37           *********************************************************/
  38          void main (void){
  39   1        
  40   1        // to store the received or transmitted byte
  41   1        char c = 0; 
  42   1        
  43   1        Init_Device();  
  44   1        uart0_init();
  45   1        
  46   1        /* Global Interrupt Enable */
  47   1        EA = 1; 
  48   1        
  49   1        /* print message using printf from stdlib.h */
  50   1        printf("Hello from printf()\n");
  51   1        
  52   1        /* print a char from our putchar */
  53   1        uart0_putc('L');
  54   1        uart0_putc('E');
C51 COMPILER V9.60.7.0   UART                                                              11/15/2023 17:40:05 PAGE 2   

  55   1        uart0_putc('T');
  56   1        uart0_putc('I');
  57   1        uart0_putc('\n');
  58   1      
  59   1        /* print a message using our print function */
  60   1        print_u0(message_u0);
  61   1            
  62   1        while(1){
  63   2        
  64   2          if(uart0_getc(&c)){
  65   3            if(c != 0)
  66   3              uart0_putc(c);
  67   3          }
  68   2        }
  69   1      }
  70          
  71          /*********************************************************
  72           * uart0 init                                            *
  73           *********************************************************/
  74          void uart0_init(void){  
  75   1          /* UART0 Control                            */
  76   1          /* set REN0, enable reception               */
  77   1          SCON0     = 0x10;
  78   1        
  79   1          /* Timer/Counter Mode                       */  
  80   1          TMOD      = 0x20;
  81   1        
  82   1          /* Clock Control                            */
  83   1          CKCON     = 0x08;
  84   1        
  85   1          /* Timer/Counter 1 High                     
  86   1           * 0x30 generates a baudrate of 115200 bps  */
  87   1          TH1       = 0x30;
  88   1        
  89   1          /* Timer 1 On/Off Control                   */
  90   1          TR1       = 1;
  91   1        
  92   1          /* UART0 TX Interrupt Flag                  */
  93   1          TI0       = 1;
  94   1          RI0 = 1;
  95   1      }
  96          /*********************************************************
  97           * print using uart0                                     *
  98           *********************************************************/
  99          void print_u0(char* p_message){
 100   1        
 101   1        unsigned char i = 0;
 102   1        
 103   1        while(p_message[i] != 0){
 104   2          
 105   2          /* Transmission flag                            */
 106   2          while(TI0 == 0);
 107   2          
 108   2          /* UART write/read buffer (1 byte only)         */
 109   2          SBUF0 = p_message[i];
 110   2          
 111   2          /* Transmission flag control. set by hardware.  */
 112   2          TI0 = 0;
 113   2          i++;
 114   2        }
 115   1      }
 116          
C51 COMPILER V9.60.7.0   UART                                                              11/15/2023 17:40:05 PAGE 3   

 117          /*********************************************************
 118           * putc using uart0                                      *
 119           *********************************************************/
 120          void uart0_putc(char c){
 121   1        
 122   1        while(TI0 == 0);
 123   1        TI0 = 0;
 124   1        SBUF0 = c;
 125   1        
 126   1      }
 127          
 128          /*********************************************************
 129           * getc using uart0                                      *
 130           *********************************************************/
 131          char uart0_getc(char* c){
 132   1      
 133   1        if(RI0 == 1){
 134   2          RI0 = 0;
 135   2          *c = SBUF0; 
 136   2          return 1;
 137   2        }
 138   1        return 0;
 139   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    202    ----
   CONSTANT SIZE    =     35    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
