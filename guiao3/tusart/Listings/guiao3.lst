C51 COMPILER V9.60.7.0   GUIAO3                                                            11/21/2023 15:42:13 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE GUIAO3
OBJECT MODULE PLACED IN .\Objects\guiao3.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE guiao3.c OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\gu
                    -iao3.lst) TABS(2) OBJECT(.\Objects\guiao3.obj)

line level    source

   1          #include <REG51F380.H>
   2          #include <stdio.h>
   3          #include "config_platform.h"
   4          #include "serialIO.h"
   5          
   6          sbit PB1 = P0 ^ 6;
   7          sbit PB2 = P0 ^ 7;
   8          sbit seg_dp = P2^7;
   9          
  10          bit dp_state = 0;
  11          bit button1pressed; // flags se os botoes sao clicados
  12          bit button2pressed;
  13          unsigned char blink = 50;
  14          unsigned char index;
  15          unsigned char prev_index = -1;
  16          
  17          
  18          // vetor dos dos numeros 16 eletemnos {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90, 0x88, 0
             -x83, 0xC6, 0xA1, 0x86, 0x8E};
  19          unsigned char vetor[16] =             {0x40, 0x79, 0x24, 0x30, 0x19, 0x12, 0x02, 0x78, 0x00, 0x10, 0x08, 0x03, 0
             -x27, 0x21, 0x06, 0x0E};
  20          
  21          void init_device(void) {
  22   1          FLSCL = 0x90;
  23   1          CLKSEL = 0x03;
  24   1          PCA0MD = 0x00;
  25   1          XBR1 = 0x40;
  26   1          XBR0 = 0x01;
  27   1      }
  28          
  29          void uart0_init(void) {
  30   1          SCON0 = 0x10;
  31   1          TMOD = 0x20;
  32   1          CKCON = 0x08;
  33   1          TH1 = 0x30;
  34   1          TR1 = 1;
  35   1          TI0 = 1;
  36   1          RI0 = 1;
  37   1      }
  38          
  39          // DEBOUNCE
  40          unsigned int debounce(bit PB) {
  41   1        char window;
  42   1        unsigned int j;
  43   1        for (j = 0; j < 8; j++)
  44   1        {
  45   2          window = (window << 1) | PB;
  46   2        }
  47   1        return window;
  48   1      }
  49          
  50          void timer2_init_auto(int reload){
  51   1      
  52   1        TMR2CN = 0;
C51 COMPILER V9.60.7.0   GUIAO3                                                            11/21/2023 15:42:13 PAGE 2   

  53   1      
  54   1        #define B_T2MH 5  
  55   1      
  56   1        CKCON &= ~((1 << B_T2MH));
  57   1        
  58   1        TMR2H = (reload) >> 8;
  59   1        TMR2L = (reload);
  60   1      
  61   1        TMR2RLH = (reload) >> 8;
  62   1        TMR2RLL = (reload);
  63   1        
  64   1      }
  65          
  66          void timer2_isr(void) interrupt 5 using 2 {
  67   1        
  68   1        char P2_state;
  69   1        P2_state = P2;
  70   1        
  71   1        // sysclock /12 = 4MHz
  72   1        // 1s 4,000,000 ticks!
  73   1        // 10ms => 40000 ticks!
  74   1        // 50 ciclos = 500ms
  75   1      
  76   1        blink--;
  77   1        if(blink == 0){
  78   2          //P2 = P2_state ^ (1 << 7);
  79   2          dp_state = ~dp_state;
  80   2          blink = 50;
  81   2        }
  82   1        
  83   1        seg_dp = dp_state;  
  84   1        TF2H = 0; 
  85   1      }
  86          
  87          void sendIndex() {
  88   1          char charToBuffer;
  89   1      
  90   1          if (index != prev_index) {
  91   2              while (TI0 == 0);
  92   2              
  93   2              // Converte o valor hex para caractere ASCII
  94   2              if (index < 10) {
  95   3                  charToBuffer = index + '0';
  96   3              } else {
  97   3                  charToBuffer = index - 0x0A + 'A';
  98   3              }
  99   2      
 100   2              SBUF0 = charToBuffer;
 101   2              TI0 = 0;
 102   2              prev_index = index;
 103   2          }
 104   1      
 105   1          P2 = vetor[index] | ((char)dp_state << 7);
 106   1      }
 107          
 108          void buttonHandler(){
 109   1          // incrementar
 110   1          if (debounce(!PB1) && !button1pressed) {
 111   2      
 112   2            if (index < 15) {
 113   3              index++;
 114   3            }
C51 COMPILER V9.60.7.0   GUIAO3                                                            11/21/2023 15:42:13 PAGE 3   

 115   2            else {
 116   3              index = 15;
 117   3            }
 118   2            sendIndex();
 119   2            button1pressed = 1;
 120   2          }
 121   1          if (!debounce(!PB1)) { // reset a flag se o botao ? clicado
 122   2            button1pressed = 0;
 123   2          }
 124   1      
 125   1          // decrementar
 126   1          if (debounce(!PB2) && !button2pressed) {
 127   2      
 128   2            if (index > 0) {
 129   3              index--;
 130   3            }
 131   2            else {
 132   3              index = 0;
 133   3            }
 134   2            
 135   2            sendIndex();
 136   2            button2pressed = 1;
 137   2          }
 138   1          
 139   1          if (!debounce(!PB2)) {
 140   2            button2pressed = 0;
 141   2          }   
 142   1      }
 143          
 144          char receiveIndex() {
 145   1          if (RI0 == 1) {
 146   2              RI0 = 0;
 147   2      
 148   2              if (SBUF0 == 'i' || SBUF0 == 'I' || SBUF0 == '+') {
 149   3                  if (index < 15) {
 150   4                      index++;
 151   4                  }
 152   3              } else {
 153   3                  if (SBUF0 == 'd' || SBUF0 == 'D' || SBUF0 == '-') {
 154   4                      if (index > 0) {
 155   5                          index--;
 156   5                      }
 157   4                  } else {
 158   4                      index = SBUF0;
 159   4                  }
 160   3              }
 161   2      
 162   2              return 1;
 163   2          }
 164   1      
 165   1          return 0;
 166   1      }
 167          
 168          
 169          void main(void) {
 170   1        init_device();
 171   1        uart0_init();
 172   1        timer2_init_auto(-40000);
 173   1        
 174   1        
 175   1        
 176   1        TF2H = 0; 
C51 COMPILER V9.60.7.0   GUIAO3                                                            11/21/2023 15:42:13 PAGE 4   

 177   1        ET2 = 1;
 178   1        TR2 = 1;
 179   1        EA = 1;
 180   1      
 181   1        
 182   1        while (1) {
 183   2            buttonHandler();
 184   2              if (receiveIndex()) {
 185   3                  sendIndex();
 186   3              }
 187   2        }
 188   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    414    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
