C51 COMPILER V9.60.7.0   PROJETO                                                           11/04/2023 23:10:41 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PROJETO
OBJECT MODULE PLACED IN .\Objects\projeto.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE projeto.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\p
                    -rojeto.lst) TABS(2) OBJECT(.\Objects\projeto.obj)

line level    source

   1          #include <REG51F380.H>
   2          #define ENABLE_UART0 (ES0 = 1)
   3          #define DISABLE_UART0 (ES0 = 0)
   4          #define BUFFERSIZE 0xff
   5          
   6          // Dados existentes em cada um dos buffers
   7          extern volatile unsigned char TxNumberOfData;
   8          extern volatile unsigned char RxNumberOfData;
   9          
  10          // Apontadores para o buffers circular
  11          unsigned char TxBufWritePtr=0, RxBufReadPtr=0;
  12          
  13          // Buffers de tranmissao e rececao
  14          volatile unsigned char TxBuffer[BUFFERSIZE];
  15          volatile unsigned char RxBuffer[BUFFERSIZE];
  16          
  17          // Apontadores de leitura no buffer TxBuffer
  18          volatile unsigned char TxBufReadPtr=0;
  19          
  20          // Apontadores de escrita no buffer RxBuffer
  21          volatile unsigned char RxBufWritePtr=0;
  22          
  23          // Dados existentes em cada um dos buffers
  24          volatile unsigned char TxNumberOfData=0;
  25          volatile unsigned char RxNumberOfData=0;
  26          
  27          void configUART0(void) {
  28   1          P0MDOUT |= 0x10; //Ativa Push-pull
  29   1          //no pino TX (recomendado)
  30   1      
  31   1          //Configurar timer1
  32   1          //Segundo a tabela 23.1 do manual do micro
  33   1          //(SYSCLK=24MHz)
  34   1          CKCON |= 0x08; //T1M=0 >> 155200bps.
  35   1          //Comentar p/ 9600bps
  36   1      
  37   1          TH1 = 0x98; //Valor de autoreload
  38   1          // p/ 115200 e 9600
  39   1      
  40   1          //Selecao e ativacao do timer
  41   1          TMOD |= 0x20; //Timer1, modo2 (autorelaod)
  42   1          TR1 = 1; 
  43   1          //TCON |=0x40 >> Ativa timer
  44   1      
  45   1          //Configurar porta serie (SCON)
  46   1          //8-bit UART por defeito
  47   1          REN0 = 1; 
  48   1          //SCON0 |=0x10 >> Ativa rececao uart0
  49   1      
  50   1          //Interrupcoes
  51   1          ES0 = 1; //Ativa a interr da porta serie (Reg IE.4)
  52   1          EA = 1; //Ativa globalmente as interr. (Reg IE.7)
  53   1      }
  54          
C51 COMPILER V9.60.7.0   PROJETO                                                           11/04/2023 23:10:41 PAGE 2   

  55          unsigned char readUART(unsigned char *value) {
  56   1          DISABLE_UART0;
  57   1          switch (RxNumberOfData) {
  58   2              BUFFEREMPTY:
  59   2              ENABLE_UART0;
  60   2              return 0;
  61   2              default:
  62   2              RxNumberOfData--;
  63   2              *value=RxBuffer[RxBufReadPtr];
  64   2              RxBufReadPtr = (RxBufReadPtr+1) % BUFFERSIZE;
  65   2          }
  66   1          ENABLE_UART0;
  67   1          return 1;
  68   1      }
*** WARNING C280 IN LINE 58 OF projeto.c: 'BUFFEREMPTY': unreferenced label
  69          
  70          unsigned char writeUART(unsigned char value) {
  71   1          DISABLE_UART0;
  72   1          switch (TxNumberOfData) {
  73   2              BUFFERFULL:
  74   2              ENABLE_UART0;
  75   2              return 0;
  76   2              BUFFEREMPTY :
  77   2              sbuf = value;
*** ERROR C202 IN LINE 77 OF projeto.c: 'sbuf': undefined identifier
  78   2              break;
  79   2              default:
  80   2              //TxNumberOfData++;
  81   2              TxBuffer[TxBufWritePtr]=value;
  82   2              TxBufWritePtr = (TxBufWritePtr+1) % BUFFERSIZE;
  83   2          }
  84   1          TxNumberOfData++;
  85   1          ENABLE_UART0;
  86   1          return 1;
  87   1      }
  88          
  89          void UARTInterrupt(void) __interrupt (bit 4) {
*** ERROR C141 IN LINE 89 OF projeto.c: syntax error near '4', expected 'hdata'
*** ERROR C132 IN LINE 89 OF projeto.c: '__interrupt': not in formal parameter list
*** ERROR C141 IN LINE 89 OF projeto.c: syntax error near '{', expected ';'
  90              if (RI0) {
*** ERROR C132 IN LINE 90 OF projeto.c: 'RI0': not in formal parameter list
*** ERROR C141 IN LINE 90 OF projeto.c: syntax error near '{', expected ';'
  91                  RI0 = 0;
*** ERROR C244 IN LINE 91 OF projeto.c: 'RI0': can't initialize, bad type or class
*** ERROR C132 IN LINE 91 OF projeto.c: 'RI0': not in formal parameter list
  92                  if (RxNumberOfData < BUFFERSIZE) {
*** ERROR C141 IN LINE 92 OF projeto.c: syntax error near 'if', expected 'hdata'
*** ERROR C141 IN LINE 92 OF projeto.c: syntax error near '<', expected ')'
  93                      RxBuffer[RxBufWritePtr] = SBUF;
*** ERROR C221 IN LINE 93 OF projeto.c: non-constant case/dim expression
*** ERROR C231 IN LINE 93 OF projeto.c: 'RxBuffer': redefinition
*** ERROR C202 IN LINE 93 OF projeto.c: 'SBUF': undefined identifier
  94                      RxWritePtr = (RxBufWritePtr +1) % BUFFERSIZE;
*** ERROR C247 IN LINE 94 OF projeto.c: non-address/-constant initializer
  95                      RxNumberOfData ++ ;
*** ERROR C129 IN LINE 95 OF projeto.c: missing ';' before '++'
  96                  }
  97              }
  98              if (TI0 == 1) {
  99                  TI0=0;
 100                  TxNumberOfData--;
C51 COMPILER V9.60.7.0   PROJETO                                                           11/04/2023 23:10:41 PAGE 3   

 101                  if (TxNumberOfData) {
 102                      SBUF = TxBuffer[TxBufReadPtr];
 103                      TxReadPtr = (TxBufReadPtr +1) % BUFFERSIZE;
 104                      //TxNumberOfData--;
 105                  }
 106              }
 107          }
 108          
 109          void main (void) {
 110              char hello[] = "Hello World";
 111              char *chr = hello;
 112              char chr_r;
 113              XBR0 |= 0x01; //Ativa UART0 no crossbar
 114              XBR1 |= 0x40; //Ativa crossbar
 115              CLKSEL |= 0x02; //SYSCLK derivado do
 116              // Oscil/2=24MHz
 117          
 118              configUART0();
 119          
 120              while (*chr) {
 121                  writeUART(*chr);
 122                  chr++;
 123              }
 124          
 125              while (1) {
 126                  while (readUART(chr_r))
 127                  writeUART(chr_r);
 128                  else {
 129                      chr = hello;
 130                      while (*chr) {
 131                          writeUART(*chr);
 132                          chr++;
 133                      }
 134                  }
 135              }
 136              
 137          }

C51 COMPILATION COMPLETE.  1 WARNING(S),  15 ERROR(S)
