C51 COMPILER V9.60.7.0   I2C_BITBANG                                                       12/05/2023 00:29:58 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE I2C_BITBANG
OBJECT MODULE PLACED IN .\Objects\i2c-bitbang.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE i2c-bitbang.c OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\i2c-bitbang.lst) TABS(2) OBJECT(.\Objects\i2c-bitbang.obj)

line level    source

   1          #include "i2c-bitbang.h"
   2          
   3          /*....................................................................
   4           * This function generates a small wait cycle
   5           *....................................................................*/
   6          void i2c_wait(void){
   7   1        
   8   1        unsigned int i; 
   9   1        
  10   1        for(i = 0; i < I2CWAIT; ){
  11   2          i++;
  12   2        }
  13   1      }
  14          
  15          //....................................................................
  16          // This function generates an I2C Start Condition
  17          //....................................................................
  18          void i2c_start(void){ 
  19   1        SDA = 1;            // ensure SDA & SCL are high
  20   1        SCLK = 1;
  21   1        
  22   1        i2c_wait();         // wait some cycles
  23   1        i2c_wait();         // wait some cycles
  24   1        
  25   1        SDA = 0;            // pull SDA low
  26   1        i2c_wait();
  27   1        SCLK = 0;           // pull SCL low
  28   1        i2c_wait();
  29   1      }
  30          
  31          //....................................................................
  32          // This function generates an I2C Stop Condition
  33          //....................................................................
  34          void i2c_stop(void){
  35   1        SCLK = 0;           // ensure SCL is low
  36   1        SDA = 0;            // SDA low
  37   1        
  38   1        i2c_wait();         // wait some cycles
  39   1      
  40   1        SCLK = 1;           // pull SCL high
  41   1        
  42   1        i2c_wait();         // wait some cycles
  43   1      
  44   1        SDA = 1;            // allow SDA to be pulled high
  45   1        
  46   1        i2c_wait();         // wait some cycles
  47   1      }
  48          
  49          //....................................................................
  50          // Writes a byte to the I2C bus
  51          //....................................................................
  52          unsigned char i2c_write(unsigned char wdata){
  53   1        unsigned char i;            // loop counter
  54   1        unsigned char ack = 0;      // ACK bit
C51 COMPILER V9.60.7.0   I2C_BITBANG                                                       12/05/2023 00:29:58 PAGE 2   

  55   1      
  56   1        SCLK = 0;                   // ensure SCL is low
  57   1        
  58   1        for (i = 0; i < 8; i++)     // loop through each bit
  59   1        {
  60   2          SDA = (wdata >> 7);       // output the MSB
  61   2      
  62   2          SCLK = 1;                 // pull SCL high to clock bit
  63   2          i2c_wait();               // wait some cycles
  64   2          SCLK = 0;
  65   2          i2c_wait();               // wait some cycles
  66   2          
  67   2          wdata = wdata << 1;       // shift left for next bit
  68   2        }
  69   1        
  70   1      #ifdef I2C_DEBUG
  71   1        // for debug purposes, SDA goes low for the ACK receive
  72   1        SDA = 0;
  73   1      #endif
  74   1        
  75   1        return 0;
  76   1      }
  77          
  78          //....................................................................
  79          // Reads a byte from the I2C bus
  80          //....................................................................
  81          unsigned char i2c_read(void)
  82          {
  83   1        unsigned char i;                // loop counter
  84   1        unsigned char rdata = 0;        // input value
  85   1        
  86   1        for (i = 0; i < 8; i++)         // loop through each bit
  87   1        {
  88   2          rdata = rdata << 1;             // shift left for next bit
  89   2      
  90   2          SCLK = 0;                        // ensure SCL is low
  91   2          SCLK = 1;                        // bring SCL high to begin transfer
  92   2          
  93   2          i2c_wait();
  94   2      
  95   2          rdata |= SDA;                   // input the received bit
  96   2            
  97   2          SCLK = 0;                        // bring SCL low again.
  98   2          
  99   2          i2c_wait();
 100   2            
 101   2        }
 102   1              
 103   1        return rdata;
 104   1      }
 105          
 106          //....................................................................
 107          // Read ack bit from the I2C bus
 108          //....................................................................
 109          unsigned char read_ack(void){
 110   1        
 111   1        unsigned char ack;
 112   1          
 113   1        SCLK = 0;                       // ensure SCL is low
 114   1      
 115   1        SCLK = 1;                       // bring SCL high to begin transfer
 116   1        
C51 COMPILER V9.60.7.0   I2C_BITBANG                                                       12/05/2023 00:29:58 PAGE 3   

 117   1        i2c_wait();                     // wait some cycles
 118   1        i2c_wait();                     // wait some cycles
 119   1        i2c_wait();                     // wait some cycles
 120   1        
 121   1        ack |= SDA;                     // input the received bit.
 122   1        
 123   1        SCLK = 0;                       // bring SCL low again.
 124   1        
 125   1        i2c_wait();                     // wait some cycles
 126   1        
 127   1        return ack;
 128   1      }
 129          
 130          //....................................................................
 131          // Write ack bit to the I2C bus
 132          //....................................................................
 133          void write_ack(unsigned char ack)
 134          {
 135   1        SCLK = 0;                        // ensure SCL is low
 136   1      
 137   1        SCLK = 1;                        // bring SCL high to begin transfer
 138   1        i2c_wait();
 139   1        i2c_wait();
 140   1        
 141   1        SDA = (ack >> 7);                 // output the MSB
 142   1        SCLK = 1;                        // pull SCL high to clock bit  
 143   1        i2c_wait();
 144   1        
 145   1        SCLK = 0;                        // bring SCL low again.
 146   1        
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    228    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
